# 首先得有个local pv,pvc, storage class
# storageclass和pv都是全局的吗？不受namespace限制？
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage-kube-demo  
provisioner: kubernetes.io/no-provisioner  # 表明不需要自动创建pv，因为我们手动创建了
volumeBindingMode: WaitForFirstConsumer  # 表明只有pod消费了对应的pvc才会进行binding pv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: prometheus-pv
spec:
  local:  # 这里指定pv是一个local pv
    path: /data/k8s/prometheus
  storageClassName: local-storage-kube-demo
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  persistentVolumeReclaimPolicy: Retain
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - node2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: kube-mon
spec:
  storageClassName: local-storage-kube-demo
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: kube-mon
  labels:
    app: prometheus
spec:  
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      name: prometheus
      namespace: kube-mon
      labels:
        app: prometheus
    spec:
      securityContext:
        runAsUser: 0
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v2.14.0
        imagePullPolicy: IfNotPresent
        args:
          - "--config.file=/etc/prometheus/prometheus.yml"
          - "--storage.tsdb.path=/prometheus"  # 指定tsdb数据路径
          - "--storage.tsdb.retention.time=24h"  # 默认是15d, 用于指定删除老数据的时间周期
          - "--web.enable-admin-api"  # 控制对admin HTTP API的访问，其中包括删除时间序列等功能
          - "--web.enable-lifecycle"  # 支持热更新，直接执行localhost:9090/-/reload立即生效
          - "--web.console.libraries=/usr/share/prometheus/console_libraries"
          - "--web.console.templates=/usr/share/prometheus/consoles"
        ports:
        - containerPort: 9090
          name: http
        volumeMounts:
        - name: prome-config
          mountPath: "/etc/prometheus"
        - name: prome-data
          mountPath: "/prometheus"
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            cpu: 100m
            memory: 512Mi
      volumes:
      - name: prome-config
        configMap:
          name: prometheus-config-cm
      - name: prome-data
        persistentVolumeClaim: 
          claimName: prometheus-pvc
    
    